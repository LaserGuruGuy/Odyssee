<Window x:Class="Odyssee.MainWindow"
        x:Name="_this"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:CustomControls="clr-namespace:CustomControls;assembly=CustomControls"
        xmlns:oxy="http://oxyplot.org/wpf"
        mc:Ignorable="d"
        Title="Odyssee" WindowStartupLocation="CenterScreen" Width="1600" Height="800" MinHeight="32" Background="White" WindowStyle="None" AllowsTransparency="True" Drop="HandleDroppedFile" AllowDrop="true" BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" StateChanged="Window_StateChanged"
        Icon=".\Icons\Odyssee.ico">
    <!-- DataContext="{Binding RelativeSource={RelativeSource Self}}" -->
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="30"
            ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
            GlassFrameThickness="{x:Static SystemParameters.WindowNonClientFrameThickness}">
        </WindowChrome>
    </WindowChrome.WindowChrome>
    <Window.Resources>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="New"/>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Control" Command="SaveAs"/>
        <KeyBinding Key="E" Modifiers="Control" Command="Close"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewCommandBinding_Executed"/>
        <CommandBinding Command="Open" Executed="OpenCommandBinding_Executed"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsCommandBinding_Executed"/>
        <CommandBinding Command="Close" Executed="CloseCommandBinding_Executed"/>
    </Window.CommandBindings>
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch">
                <Menu Name="Menu" WindowChrome.IsHitTestVisibleInChrome="True" DockPanel.Dock="Left" VerticalAlignment="Stretch" Background="Transparent" FontSize="13">
                    <MenuItem Header="_File" Height="30">
                        <MenuItem Name="menuNew" Header="_New" Command="New" InputGestureText="Ctrl+N"/>
                        <MenuItem Name="menuOpen" Header="_Open..." Command="Open" InputGestureText="Ctrl+O"/>
                        <MenuItem Name="menuSaveAs" Header="_Save as..." Command="SaveAs" InputGestureText="Ctrl+S"/>
                        <Separator/>
                        <MenuItem Header="_Import">
                            <MenuItem Header="Impulse Response from Wave File" Click="MenuItem_Import_ChannelResponseData_WaveFile_OnClick" ToolTip="16384-sample 32-bit float 1-channel impulse response wav files (16384_ImpulseResponse_48000_FL_0_10,2.wav)"/>
                            <MenuItem Header="FIR Coefficients from Wave File" Click="MenuItem_Import_CurveFilterCoeff_WaveFile_OnClick" ToolTip="1024-tap (704-tap for subwoofer) 32-bit float 1-channel FIR curvefilter coefficient wav files (coefficient48kHz_FlatCurveFilter_FL.wav)"/>
                        </MenuItem>
                        <MenuItem Header="_Export" ToolTip="Export 16384-sample 32-bit float 1-channel impulse response">
                            <MenuItem Header="Impulse Response to Wave File" Click="MenuItem_Export_ChannelResponseData_WaveFile_OnClick" ToolTip="Export all channels, all positions to wav files"/>
                            <MenuItem Header="Impulse Response to Frd File" Click="MenuItem_Export_ChannelResponseData_FrdFile_OnClick" ToolTip="Export all channels, all positions to FRD files"/>
                            <MenuItem Header="Filter Coefficients to Wave File" Click="MenuItem_Export_FilterCoefficients_WaveFile_OnClick" ToolTip="Export all filter coefficients to wav files"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Name ="menuClose" Header="_Close" Command="Close" InputGestureText="Alt+F4"/>
                    </MenuItem>
                    <MenuItem Header="_Receiver">
                        <MenuItem Header="_Detect Receiver" Name="detectReceiver" Click="MenuItem_DetectReceiver_OnClick"/>
                        <MenuItem Header="Connect _Receiver" Name="MenuItem_ConnectReceiver" Click="MenuItem_ConnectReceiver_OnClick" IsCheckable="True" IsChecked="{Binding AvrConnect_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Connect S_niffer" Name="connectSniffer" Click="MenuItem_ConnectSniffer_OnClick" IsCheckable="True" IsChecked="{Binding SnifferAttach_IsChecked, Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Get Receiver _Info" Name="MenuItem_ReceiverInfo" Click="MenuItem_AvrInfo_OnClick" IsCheckable="True" IsChecked="{Binding AvrInfo_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Get Receiver _Status" Name="MenuItemReceiverStatus" Click="MenuItem_AvrStatus_OnClick" IsCheckable="True" IsChecked="{Binding AvrStatus_IsChecked, Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Enter _Audyssey" Name="MenuItem_EnterAudysseyMode" Click="MenuItem_EnterAudysseyMode_OnClick" IsCheckable="True" IsChecked="{Binding EnterAudysseyMode_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Exit _Audyssey" Name="MenuItem_ExitAudysseyMode" Click="MenuItem_ExitAudysseyMode_OnClick" IsCheckable="True" IsChecked="{Binding ExitAudysseyMode_IsChecked, Mode=TwoWay}"/>
                        <Separator/>
                        <MenuItem Header="Set LvLm SW1" Name="MenuItem_AvrLvLm_SW1" Click="MenuItem_AvrLvLm_SW1_OnClick" IsCheckable="True" IsChecked="{Binding AvrLvlm_SW1_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Set LvLm SW2" Name="MenuItem_AvrLvLm_SW2" Click="MenuItem_AvrLvLm_SW2_OnClick" IsCheckable="True" IsChecked="{Binding AvrLvlm_SW2_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Abort Oprt" Name="MenuItem_Abort_Oprt" Click="MenuItem_Abort_Oprt_OnClick"/>
                        <Separator/>
                        <MenuItem Header="Set PosNum" Name="MenuItem_SetAvrSetPosNum" Click="MenuItem_SetAvrSetPosNum_OnClick" IsCheckable="True" IsChecked="{Binding SetPosNum_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Start Chnl" Name="MenuItem_SetAvrStartChnl" Click="MenuItem_SetAvrStartChnl_OnClick" IsCheckable="True" IsChecked="{Binding StartChnl_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Get Respon" Name="MenuItem_SetAvrGetRespon" Click="MenuItem_SetAvrGetRespon_OnClick" />
                        <Separator/>
                        <MenuItem Header="Set Amp" Name="MenuItem_SetAvrSetAmp" Click="MenuItem_SetAvrSetAmp_OnClick" IsCheckable="True" IsChecked="{Binding SetAmp_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Set Audy" Name="MenuItem_SetAvrSetAudy" Click="MenuItem_SetAvrSetAudy_OnClick" IsCheckable="True" IsChecked="{Binding SetAudy_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Set DisFil" Name="MenuItem_SetAvrSetDisFil" Click="MenuItem_SetAvrSetDisFil_OnClick" IsCheckable="True" IsChecked="{Binding SetDisFil_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Init Coefs" Name="MenuItem_SetAvrInitCoefs" Click="MenuItem_SetAvrInitCoefs_OnClick" IsCheckable="True" IsChecked="{Binding InitCoefs_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="Set CoefDt" Name="MenuItem_SetAvrSetCoefDt" Click="MenuItem_SetAvrSetCoefDt_OnClick" IsCheckable="True" IsChecked="{Binding SetCoefDt_IsChecked, Mode=TwoWay}"/>
                        <MenuItem Header="AudyFinFlg" Name="MenuItem_AudyFinFlag" Click="MenuItem_AudyFinFlag_OnClick" IsCheckable="True" IsChecked="{Binding AudyFinFlag_IsChecked, Mode=TwoWay}"/>
                    </MenuItem>
                </Menu>
                <ToggleButton Name="ToggleButton_ConnectReceiver" Click="OnButtonClick_ConnectReceiver" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" IsChecked="{Binding AvrConnect_IsChecked, Mode=TwoWay}" ToolTip="Connect to the Receiver">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Ethernet.png"/>
                </ToggleButton>
                <Button Name="ToggleButton_Inspector" Click="OnButtonClick_Inspector" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ToolTip="Get receiver Info and Status">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Inspector.png"/>
                </Button>
                <ToggleButton Name="ToggleButton_Audyssey" Click="OnButtonClick_Audyssey" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" IsChecked="{Binding AudysseyMode_IsChecked, Mode=TwoWay}" ToolTip="Enter Receiver remote control">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Audyssey.png"/>
                </ToggleButton>
                <ToggleButton Click="OnButtonClick_SubwooferOneLevel" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" IsChecked="{Binding AvrLvlm_SW1_IsChecked, Mode=TwoWay}" ToolTip="Adjust Subwoofer 1 Level">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Subwoofer.png"/>
                </ToggleButton>
                <Button Click="OnButtonClick_Microphone" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ToolTip="Measure Chirp Response with Receiver Microphone">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Microphone.png"/>
                </Button>
                <Button Click="OnButtonClick_Speaker" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" ToolTip="Send Coefficients to Receiver Speakers">
                    <Image Height="30" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="/Icons/Speaker.png"/>
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                <Label Content="Receiver" VerticalAlignment="Center" ></Label>
                <ComboBox x:Name="cmbInterfaceReceiver" ItemsSource="{Binding ReceiverDeviceInfo, IsAsync=True, AsyncState=TwoWay}" DisplayMemberPath="FriendlyName" SelectedValuePath = "IpAddress" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" Width="auto"/>
                <Label Content="Computer" VerticalAlignment="Center" ></Label>
                <ComboBox x:Name="cmbInterfaceComputer" ItemsSource="{Binding ComputerDeviceInfo, IsAsync=True, AsyncState=TwoWay}" DisplayMemberPath="Description" SelectedValuePath = "IpAddress" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" Width="auto" SelectionChanged="ComboBox_InterfaceComputer_SelectionChanged"/>
            </StackPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Button Click="OnButtonClick_Minimize" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <Path Width="46" Height="30" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                </Button>
                <Button Name="maximizeButton" Click="OnButtonClick_MaximizeRestore" RenderOptions.EdgeMode="Aliased" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0"  IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <Path Width="46" Height="30" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                </Button>
                <Button Name="restoreButton" Click="OnButtonClick_MaximizeRestore" Visibility="Collapsed" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <Path Width="46" Height="30" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                </Button>
                <Button	Click="OnButtonClick_Close" WindowChrome.IsHitTestVisibleInChrome="True" Padding="0" IsTabStop="False" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <Path Width="46" Height="30" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1"/>
                </Button>
            </StackPanel>
            <DockPanel Grid.Row="2" LastChildFill="True">
                <Grid DockPanel.Dock="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <GroupBox Grid.Column="0" Header="Channel Setup">
                                    <ListView Grid.Column="0" x:Name="ChannelsView" BorderThickness="0" ItemsSource="{Binding DetectedChannels, AsyncState=TwoWay}" SelectedItem="{Binding SelectedChannel}" SelectionMode="Single" Margin="0,4,0,0" IsSynchronizedWithCurrentItem="False">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Channel" Width="auto" DisplayMemberBinding="{Binding Channel}"/>
                                                <GridViewColumn Header="Setup" Width="auto" DisplayMemberBinding="{Binding Setup}"/>
                                                <GridViewColumn Header="Skip" Width="auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox IsChecked="{Binding Path=Skip}" ToolTip="Check to skip channel calibration"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header="Stick" Width="auto">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox IsChecked="{Binding Path=Stick}" ToolTip="Check to stick channel plot"/>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </GroupBox>
                                <StackPanel Grid.Column="2" Orientation="Vertical">
                                    <GroupBox Header="Receiver IP Address">
                                        <Label Content="{Binding SelectedValue, ElementName=cmbInterfaceReceiver}"></Label>
                                    </GroupBox>
                                    <GroupBox Header="Channel Name" DataContext="{Binding SelectedValue, ElementName=ChannelsView}">
                                        <Label Content="{Binding Name}"></Label>
                                    </GroupBox>
                                    <GroupBox Header="Channel Report" DataContext="{Binding SelectedValue, ElementName=ChannelsView}">
                                        <Grid DataContext="{Binding ChannelReport}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Row="0" Grid.Column="0" Content="Speaker Connect"></Label>
                                            <ComboBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding SpConnect}" ItemsSource="{Binding SetupList}" VerticalAlignment="Center" ToolTip="Large (L), Small (S), None (N) or Ext (E)"/>
                                            <Label Grid.Row="1" Grid.Column="0" Content="Speaker Polarity"></Label>
                                            <ComboBox Grid.Row="1" Grid.Column="1" SelectedValue="{Binding Polarity}" ItemsSource="{Binding PolarityList}" VerticalAlignment="Center" ToolTip="Normal (N) or Reverse (R)"/>
                                            <Label Grid.Row="2" Grid.Column="0" Content="Speaker Distance (cm)"></Label>
                                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Distance}" VerticalAlignment="Center" ToolTip="For sound travelling through air at 343 m/s at 20 °C"></TextBox>
                                            <Label Grid.Row="3" Grid.Column="0" Content="Speaker Delay (ms)"></Label>
                                            <Label Grid.Row="3" Grid.Column="1" Content="{Binding Delay}" VerticalAlignment="Center" ToolTip="Add 5 ms for dsp when comparing with channel response"></Label>
                                            <Label Grid.Row="4" Grid.Column="0" Content="Response Coefficient"></Label>
                                            <Label Grid.Row="4" Grid.Column="1" Content="{Binding ResponseCoef}" VerticalAlignment="Center" ToolTip="Chirp volume is adapted to speaker sensitivity and environmental background noise"></Label>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Header="Channel Data" DataContext="{Binding SelectedValue, ElementName=ChannelsView}">
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Row="0" Grid.Column="0" Content="Channel Level (dB)"></Label>
                                            <ComboBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding ChLevel}" ItemsSource="{Binding ChLevelList}" VerticalAlignment="Center"/>
                                            <Label Grid.Row="1" Grid.Column="0" Content="Channel Crossover (Hz)"></Label>
                                            <ComboBox Grid.Row="1" Grid.Column="1" SelectedValue="{Binding Crossover}" ItemsSource="{Binding CrossoverList}" VerticalAlignment="Center"/>
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <GroupBox Grid.Row="1" Header="Audyssey">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="AudyMultEq" IsChecked="{Binding AudyMultEq}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="AudyLfc" IsChecked="{Binding AudyLfc}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" Content="AudyDynVol" IsChecked="{Binding AudyDynVol}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <CheckBox Grid.Row="3" Grid.Column="0" Content="AudyDynEq" IsChecked="{Binding AudyDynEq}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label Grid.Row="0" Grid.Column="1" Content="AudyEqSet"></Label>
                                <ComboBox Grid.Row="0" Grid.Column="2" SelectedValue="{Binding AudyEqSet}" ItemsSource="{Binding AudyEqSetList}" VerticalAlignment="Center"/>
                                <Label Grid.Row="1" Grid.Column="1" Content="AudyLfcLev"></Label>
                                <ComboBox Grid.Row="1" Grid.Column="2" SelectedValue="{Binding AudyLfcLev}" ItemsSource="{Binding AudyLfcLevList}" VerticalAlignment="Center"/>
                                <Label Grid.Row="2" Grid.Column="1" Content="AudyDynVolSet"></Label>
                                <ComboBox Grid.Row="2" Grid.Column="2" SelectedValue="{Binding AudyDynSet}" ItemsSource="{Binding AudyDynSetList}" VerticalAlignment="Center"/>
                                <Label Grid.Row="3" Grid.Column="1" Content="AudyDynEqRef (dB)"></Label>
                                <ComboBox Grid.Row="3" Grid.Column="2" SelectedValue="{Binding AudyEqRef}" ItemsSource="{Binding AudyEqRefList}" VerticalAlignment="Center"/>
                                <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal">
                                    <CustomControls:NumericUpDown x:Name="NumericUpDownControl"  Value="{Binding NumPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  MaxValue="8" MinValue="1" Width="34" Margin="6,0,0,0" />
                                    <Label Content="NumPos" VerticalAlignment="Center"></Label>
                                </StackPanel>
                                <Label Grid.Row="4" Grid.Column="1" Content="AudyFinFlg"></Label>
                                <ComboBox Grid.Row="4" Grid.Column="2" SelectedValue="{Binding AudyFinFlg}" ItemsSource="{Binding AudyFinFlgList}" IsSynchronizedWithCurrentItem="False" VerticalAlignment="Center"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Row="2" Header="Audio Video Receiver Info and Status">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!---AvrInfo-->
                                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" >
                                    <Label Content="Ifver"/>
                                    <Label Content="{Binding AvrInfo.Ifver}" VerticalAlignment="Center"/>
                                </StackPanel>
                                <Label Grid.Row="3" Grid.Column="1" Content="DType"/>
                                <Label Grid.Row="3" Grid.Column="2" Content="{Binding AvrInfo.DType}" VerticalAlignment="Center"/>
                                <Label Grid.Row="6" Grid.Column="1" Content="CoefWaitTimeInit"/>
                                <Label Grid.Row="6" Grid.Column="2" Content="{Binding AvrInfo.CoefWaitTime.Init}" VerticalAlignment="Center"/>
                                <Label Grid.Row="7" Grid.Column="1" Content="CoefWaitTimeFinal"/>
                                <Label Grid.Row="7" Grid.Column="2" Content="{Binding AvrInfo.CoefWaitTime.Final}" VerticalAlignment="Center"/>
                                <Label Grid.Row="4" Grid.Column="1" Content="AdC"/>
                                <Label Grid.Row="4" Grid.Column="2" Content="{Binding AvrInfo.ADC}" VerticalAlignment="Center"/>
                                <Label Grid.Row="5" Grid.Column="1" Content="SysDelay"/>
                                <Label Grid.Row="5" Grid.Column="2" Content="{Binding AvrInfo.SysDelay}" VerticalAlignment="Center"/>
                                <Label Grid.Row="2" Grid.Column="1" Content="EQType"/>
                                <Label Grid.Row="2" Grid.Column="2" Content="{Binding AvrInfo.EQType}" VerticalAlignment="Center"/>
                                <CheckBox Grid.Row="3" Grid.Column="0" Content="SWLvlMatch" IsChecked="{Binding AvrInfo.SWLvlMatch}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="Auro" IsChecked="{Binding AvrInfo.Auro}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" Content="LFC" IsChecked="{Binding AvrInfo.LFC}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <Label Grid.Row="0" Grid.Column="1" Content="Upgrade"/>
                                <Label Grid.Row="0" Grid.Column="2" Content="{Binding AvrInfo.Upgrade}" VerticalAlignment="Center"/>
                                <!---AvrStatus-->
                                <CheckBox Grid.Row="4" Grid.Column="0" Content="HPPlug" IsChecked="{Binding AvrStatus.HPPlug}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <CheckBox Grid.Row="5" Grid.Column="0" Content="Mic" IsChecked="{Binding AvrStatus.Mic}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <CheckBox Grid.Row="6" Grid.Column="0" Content="BTTXStatus" IsChecked="{Binding AvrStatus.BTTXStatus}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <CheckBox Grid.Row="7" Grid.Column="0" Content="SpPreset" IsChecked="{Binding AvrStatus.SpPreset}" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False"/>
                                <Label Grid.Row="1" Grid.Column="1" Content="AmpAssign"/>
                                <Label Grid.Row="1" Grid.Column="2" Content="{Binding AvrStatus.AmpAssign}" VerticalAlignment="Center"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
                <GroupBox Header="Graph Filter" DockPanel.Dock="Right">
                <StackPanel Orientation="Vertical" DataContext="{Binding SelectedValue, ElementName=ChannelsView}">
                        <ListView ItemsSource="{Binding ResponseData, IsAsync=True}" SelectedItem="{Binding SelectedResponseData, IsAsync=True}" SelectionChanged="ListView_ResponseData_SelectionChanged" KeyUp="ListView_ResponseData_KeyUp">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Response" Width="auto" DisplayMemberBinding="{Binding Key, IsAsync=True}"/>
                                <GridViewColumn Header="Stick" Width="auto" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Checked="ListView_CheckBox_ResponseDataSticky_Checked" Unchecked="ListView_CheckBox_ResponseDataSticky_Unchecked" Initialized="ListView_CheckBox_ResponseDataSticky_Initialized"/>
                                         </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Average" Width="auto" >
                                        <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Checked="ListView_CheckBox_ResponseDataAverage_Checked" Unchecked="ListView_CheckBox_ResponseDataAverage_Unchecked" Initialized="ListView_CheckBox_ResponseDataAverage_Initialized"/>
                                         </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                        <ListView ItemsSource="{Binding AudyCurveFilter, IsAsync=True}" SelectedItem="{Binding SelectedAudyCurveFilter, IsAsync=True}" TextElement.Foreground="Teal"  SelectionChanged="ListView_AudyCurveFilter_SelectionChanged" KeyUp="ListView_AudyCurveFilter_KeyUp">
                        <ListView.View>
                            <GridView>
                                    <GridViewColumn Header="Audy Curve Filter" Width="auto" DisplayMemberBinding="{Binding Key, IsAsync=True}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                        <ListView ItemsSource="{Binding FlatCurveFilter, IsAsync=True}" SelectedItem="{Binding SelectedFlatCurveFilter, IsAsync=True}" TextElement.Foreground="BlueViolet" SelectionChanged="ListView_FlatCurveFilter_SelectionChanged" KeyUp="ListView_FlatCurveFilter_KeyUp">
                        <ListView.View>
                            <GridView>
                                    <GridViewColumn Header="Flat Curve Filter" Width="auto" DisplayMemberBinding="{Binding Key, IsAsync=True}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </StackPanel>
                </GroupBox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="30,0,0,0">
                        <Label  Name="Label_SmoothingFactor" VerticalAlignment="Center" Content="Smoothing"></Label>
                        <Slider Name="Slider_SmoothingFactor" VerticalAlignment="Center" Width="300" Margin="10,0,0,0" Value="{Binding SmoothingFactor}" Minimum="0" Maximum="48" Orientation="Horizontal" TickPlacement="Both" LargeChange="5" SmallChange="1" AutoToolTipPlacement="BottomRight" ValueChanged="Slider_SmoothingFactor_ValueChanged"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="0,0,10,0">
                        <CheckBox Name="CheckBox_LogarithmicAxis" Content="Logarithmic Axis" IsChecked="true"  Checked="CheckBox_LogarithmicAxis_Checked" Unchecked="CheckBox_LogarithmicAxis_Unchecked" />
                    </StackPanel>
                    <oxy:PlotView Grid.Row="1" Grid.ColumnSpan="2" x:Name="plot" DataContext="{Binding ElementName=_this}" Model="{Binding PlotModel}"/>
                    <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="30,0,0,0">
                        <RadioButton Name="RadioButton_RangeChirp" Content="0-350ms" Checked="RadioButton_Range_Checked" Margin="0,0,10,0"/>
                        <RadioButton Name="RadioButton_RangeSubwoofer" Content="10-1000Hz" Checked="RadioButton_Range_Checked" Margin="0,0,10,0"/>
                        <RadioButton Name="RadioButton_RangeFull" Content="10Hz-24kHz" Checked="RadioButton_Range_Checked" Margin="0,0,10,0" IsChecked="True"/>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,0,0">
                        <CheckBox Name="CheckBox_CurveFilter" Content="Apply Curve Filter" Checked="CheckBox_CurveFilter_Checked" Unchecked="CheckBox_CurveFilter_Unchecked" Margin="0,0,10,0" IsChecked="False"/>
                        <RadioButton Name="RadioButton_FlatCurveFilter" Content="Flat Curve Filter" Checked="RadioButton_CurveFilter_Checked" Margin="0,0,10,0"/>
                        <RadioButton Name="RadioButton_AudyCurveFilter" Content="Audy Curve Filter" Checked="RadioButton_CurveFilter_Checked" Margin="0,0,10,0" IsChecked="True"/>
                    </StackPanel>
                </Grid>
            </DockPanel>
            <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" />
            <TextBox Grid.Row="4" VerticalAlignment="Bottom" 
                BorderBrush="Transparent"
                IsReadOnly="True" SelectionBrush="Transparent" 
                Text="{Binding Serialized, NotifyOnTargetUpdated=True}"
                VerticalContentAlignment="Stretch"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"
                TextWrapping="WrapWithOverflow"
                TargetUpdated="TextBox_TargetUpdated" SizeChanged="TextBox_SizeChanged"/>
        </Grid>
    </Border>
</Window>